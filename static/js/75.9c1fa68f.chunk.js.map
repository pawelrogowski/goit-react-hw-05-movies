{"version":3,"file":"static/js/75.9c1fa68f.chunk.js","mappings":"uLAsDA,IAlDA,WACE,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,EAAAA,IAAaH,GAAaI,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAASC,KAAKC,QAA5B,KAEvCC,EAAAA,EAAAA,MAAoBJ,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAASC,KAAKC,QAA5B,GAEpC,GAAE,CAACP,KAOF,4BACE,6BACE,+CAEE,kBAAOS,KAAK,OAAOC,MAAOV,EAAaW,SAT/C,SAAiCC,GAC/BX,EAAeW,EAAMC,OAAOH,MAC7B,QASK,mBAAQD,KAAK,SAASK,QAAS,kBAAMb,EAAe,GAArB,EAA/B,sBAIDH,EAAOiB,OAAS,GACf,wBACGjB,EAAOkB,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACGF,EAAMG,cACL,gBACEC,IAAG,yCAAoCJ,EAAMG,aAC7CE,IAAKL,EAAMM,SAGf,wBAAKN,EAAMM,YARNN,EAAME,GADA,OAenB,6CAIP,C,wGCxBD,UAxBA,WACE,OAA4BtB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAO2B,EAAP,KAAcC,EAAd,KAcA,OAZAvB,EAAAA,EAAAA,YAAU,WACR,IAAMwB,EAAW,mCAAG,8GAEOlB,EAAAA,EAAAA,MAFP,OAEVH,EAFU,OAGhBN,EAAUM,EAASC,KAAKC,SAHR,gDAKhBkB,EAAS,EAAD,IALQ,yDAAH,qDAQjBC,GACD,GAAE,KAGD,4BACE,2CACCF,GAAQ,kDAA0BA,EAAMG,YAAe,SAAC,IAAD,CAAW7B,OAAQA,MAGhF,C,sBC1BD,SAAS8B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBzB,EAAQ0B,EAAK1B,KAInB,CAHE,MAAOc,GAEP,YADAO,EAAOP,EAET,CAEIY,EAAKC,KACPP,EAAQpB,GAER4B,QAAQR,QAAQpB,GAAON,KAAK4B,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMtB,GACbkB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQvB,EAClE,CAEA,SAASuB,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["components/MovieList/MovieList.js","pages/Home/Home.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTrendingMovies, searchMovies } from '../../api/themoviedb';\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    if (searchQuery) {\n      searchMovies(searchQuery).then(response => setMovies(response.data.results));\n    } else {\n      getTrendingMovies().then(response => setMovies(response.data.results));\n    }\n  }, [searchQuery]);\n\n  function handleSearchQueryChange(event) {\n    setSearchQuery(event.target.value);\n  }\n\n  return (\n    <div>\n      <form>\n        <label>\n          Search movies:\n          <input type=\"text\" value={searchQuery} onChange={handleSearchQueryChange} />\n        </label>\n        <button type=\"button\" onClick={() => setSearchQuery('')}>\n          Clear\n        </button>\n      </form>\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                {movie.poster_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w154${movie.poster_path}`}\n                    alt={movie.title}\n                  />\n                )}\n                <h3>{movie.title}</h3>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found</p>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n","import React, { useState, useEffect } from 'react';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { getTrendingMovies } from '../../api/themoviedb';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await getTrendingMovies();\n        setMovies(response.data.results);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {error ? <p>Something went wrong: {error.message}</p> : <MovieList movies={movies} />}\n    </div>\n  );\n}\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movies","setMovies","searchQuery","setSearchQuery","useEffect","searchMovies","then","response","data","results","getTrendingMovies","type","value","onChange","event","target","onClick","length","map","movie","to","id","poster_path","src","alt","title","error","setError","fetchMovies","message","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}