{"version":3,"file":"static/js/15.bff75748.chunk.js","mappings":"sQAAA,IAAMA,EAAa,mCAEnB,SAASC,EAAkBC,GACzB,OAAOC,MAAM,sCAAD,OAC4BD,EAD5B,oBAC+CF,IACzDI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,CAED,SAASC,EAAaC,GACpB,OAAOL,MAAM,qDAAD,OAC2CH,EAD3C,kBAC+DQ,IACzEJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,CAED,SAASG,IACP,OAAON,MAAM,2DAAD,OACiDH,IAC3DI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,CAED,SAASI,EAAkBR,GACzB,OAAOC,MAAM,sCAAD,OAC4BD,EAD5B,4BACuDF,IACjEI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,CAED,SAASK,EAAkBT,GACzB,OAAOC,MAAM,sCAAD,OAC4BD,EAD5B,4BACuDF,IACjEI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,C,0JC3BYM,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mN,SCAVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,SCRYE,EAAmBN,EAAAA,GAAAA,IAAH,qGAMhBO,EAAYP,EAAAA,GAAAA,IAAH,qEAKTQ,EAASR,EAAAA,GAAAA,IAAH,oEAKNS,EAAQT,EAAAA,GAAAA,GAAH,4CAILU,EAAQV,EAAAA,GAAAA,KAAH,oEAKLW,EAAYX,EAAAA,GAAAA,EAAH,6CAITY,EAAWZ,EAAAA,GAAAA,EAAH,gDAIRa,EAASb,EAAAA,GAAAA,IAAH,gDAINc,EAAQd,EAAAA,GAAAA,KAAH,iGAMLe,EAAwBf,EAAAA,GAAAA,GAAH,mFCuClC,EAjEqB,WAAO,IAAD,IACjBX,GAAY2B,EAAAA,EAAAA,MAAZ3B,QACR,GAA0B4B,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAQ7C,IANAC,EAAAA,EAAAA,YAAU,YACRpC,EAAAA,EAAAA,IAAkBC,GAASE,MAAK,SAAA2B,GAC9BC,EAASD,EACV,GACF,GAAE,CAAC7B,KAEC6B,EACH,OAAO,wCAGT,IAAQO,EACNP,EADMO,MAAOC,EACbR,EADaQ,YAAaC,EAC1BT,EAD0BS,aAAcC,EACxCV,EADwCU,aAAcC,EACtDX,EADsDW,SAAUC,EAChEZ,EADgEY,OAG5DC,EAAOJ,EAAaK,UAAU,EAAG,GACjCC,EAAQC,KAAKC,KAAoB,GAAfP,GAExB,OACE,6BACE,SAAC1B,EAAD,CAAUC,GAAIiB,EAAd,sBACA,UAACd,EAAD,YACE,SAACE,EAAD,CACE4B,IAAG,yCAAoCV,GACvCW,IAAKZ,KAEP,UAAClB,EAAD,YACE,UAACE,EAAD,WACGgB,EADH,KACYM,EADZ,QAGA,UAACrB,EAAD,0BAAoBuB,EAApB,QACA,SAACtB,EAAD,wBACA,SAACC,EAAD,UAAWiB,KACX,SAAClB,EAAD,sBACA,SAACE,EAAD,UACGiB,EAAOQ,KAAI,SAAAC,GAAK,OACf,SAACzB,EAAD,UAAuByB,EAAMC,MAAjBD,EAAME,GADH,aAMvB,UAAC1B,EAAD,YACE,mDACA,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAOmB,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMjB,GAAG,UAAUmB,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,SAAC,EAAAsB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const MY_API_KEY = '81fda9da55dee985dc0d013b7d430450';\n\nfunction fetchMovieDetails(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${MY_API_KEY}`\n  ).then(response => response.json());\n}\n\nfunction searchMovies(query) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => response.json());\n}\n\nfunction getTrendingMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${MY_API_KEY}`\n  ).then(response => response.json());\n}\n\nfunction fetchMovieCredits(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => response.json());\n}\n\nfunction fetchMovieReviews(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n  ).then(response => response.json());\n}\n\nexport {\n  fetchMovieDetails,\n  searchMovies,\n  getTrendingMovies,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 400;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"10\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  padding-bottom: 20px;\n  border-bottom: solid grey 2px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Poster = styled.img`\n  max-width: 250px;\n  margin-right: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n`;\n\nexport const Score = styled.span`\n  font-size: 16px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoTitle = styled.p`\n  font-weight: 700;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Genres = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Genre = styled.span`\n  margin-right: 10px;\n  margin-bottom: 10px;\n  display: inline-block;\n`;\n\nexport const AdditionalInformation = styled.ul`\n  padding-bottom: 20px;\n  border-bottom: solid 2px grey;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { fetchMovieDetails } from '../../api';\nimport {\n  DetailsContainer,\n  Poster,\n  Title,\n  Score,\n  Overview,\n  Genres,\n  Genre,\n  MovieInfo,\n  InfoTitle,\n  AdditionalInformation,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(movie => {\n      setMovie(movie);\n    });\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movie;\n\n  const year = release_date.substring(0, 4);\n  const score = Math.ceil(vote_average * 10);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <DetailsContainer>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <MovieInfo>\n          <Title>\n            {title} ({year})\n          </Title>\n          <Score>User Score: {score}%</Score>\n          <InfoTitle>Overview</InfoTitle>\n          <Overview>{overview}</Overview>\n          <InfoTitle>Genres</InfoTitle>\n          <Genres>\n            {genres.map(genre => (\n              <Genre key={genre.id}>{genre.name}</Genre>\n            ))}\n          </Genres>\n        </MovieInfo>\n      </DetailsContainer>\n      <AdditionalInformation>\n        <p>Additional information</p>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </AdditionalInformation>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MY_API_KEY","fetchMovieDetails","movieId","fetch","then","response","json","searchMovies","query","getTrendingMovies","fetchMovieCredits","fetchMovieReviews","StyledLink","styled","Link","BackLink","to","children","size","DetailsContainer","MovieInfo","Poster","Title","Score","InfoTitle","Overview","Genres","Genre","AdditionalInformation","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","title","poster_path","release_date","vote_average","overview","genres","year","substring","score","Math","ceil","src","alt","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}